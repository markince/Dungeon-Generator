using System.Collections;
using System.Collections.Generic;
using UnityEngine;

//*******************************************************************************************************************************************//
//  File:   GemBob.cs                                                                                                                        //
//                                                                                                                                           //
//  Author: Mark Ince                                                                                                                        //
//                                                                                                                                           //
//  Date:   03/11/2020                                                                                                                       //
//                                                                                                                                           //
//  Info:   Gem Bob                                                                                                                          //
//                                                                                                                                           //
//  Notes:  Makes the gemollectable items bob up and down in the world                                                                       //
//                                                                                                                                           //
//*******************************************************************************************************************************************//


public class GemBob : MonoBehaviour
{
    //***************************************************************************************************************************************//
    //	Public Variables                                                                                                                     //
    //***************************************************************************************************************************************//

    public float degreesPerSecond = 10.0f;
    public float amplitude = 0.2f;
    public float frequency = 1f;

    //***************************************************************************************************************************************//
    //	Private Variables                                                                                                                    //
    //***************************************************************************************************************************************//

    Vector3 posOffset = new Vector3();
    Vector3 tempPos = new Vector3();

    //***************************************************************************************************************************************//
    //	Start Function                                                                                                                       //
    //***************************************************************************************************************************************//

    void Start()
    {
        // Store the starting position & rotation of the object
        posOffset = transform.position;
    }

    //***************************************************************************************************************************************//
    //	Update Function                                                                                                                      //
    //***************************************************************************************************************************************//

    void Update()
    {

        // Spin object around Y-Axis
        transform.Rotate(new Vector3(0f, Time.deltaTime * degreesPerSecond, 0f), Space.World);

        // Float up/down with a Sin()
        tempPos = posOffset;
        tempPos.y += Mathf.Sin(Time.fixedTime * Mathf.PI * frequency) * amplitude;

        transform.position = tempPos;
    }
}
